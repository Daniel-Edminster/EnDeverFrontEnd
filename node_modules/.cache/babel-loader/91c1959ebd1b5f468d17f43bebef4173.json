{"ast":null,"code":"var _jsxFileName = \"C:\\\\cygwin64\\\\home\\\\Daniel\\\\sei\\\\sandbox\\\\blowmeup\\\\EnDeverFrontEnd\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"./logo.svg\";\nimport endevercircle from \"./img/endevercircle.png\";\nimport GitHubLogo from \"./img/GitHub_Logo_White.png\";\nimport \"./App.css\";\nimport \"./fonts/fonts.css\";\nimport queryString from \"query-string\"; //For testing\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport DevCard from \"./components/DevCard/DevCard\";\nimport Messenger from \"./components/Messenger/Messenger\";\n\nclass App extends Component {\n  constructor() {\n    super(); //temporary...\n\n    this.testStateChange = () => {\n      // this.setState({ auth: true });\n      window.location = this.state.authURL;\n    };\n\n    this.setMainViewState = (force = \"\") => {\n      console.log(\"the state \");\n      console.log(this.state);\n\n      if (this.state.auth === true) {\n        if (force !== \"\") {\n          this.setState({\n            primaryDisplay: force\n          });\n        } else {\n          if (this.state.primaryDisplay === \"cards\") {\n            this.setState({\n              primaryDisplay: \"messenger\"\n            });\n          } else {\n            this.setState({\n              primaryDisplay: \"cards\"\n            });\n          }\n        }\n      } else {\n        console.log(\"auth: false\");\n      }\n    };\n\n    this.setMessengerID = id => {\n      axios.get(`https://tigerkingbackend.herokuapp.com/message/${id}`, {\n        withCredentials: true\n      }).then(res => {\n        this.setState({\n          messengerHistory: res\n        });\n      });\n    };\n\n    this.logState = () => {\n      console.log(this.state);\n    };\n\n    this.sessionCheck = () => {\n      // console.log(document.cookie);\n      axios.get(\"http://localhost:4000/sessioncheck\", {\n        // .get(\"https://tigerkingbackend.herokuapp.com/sessioncheck\", {\n        withCredentials: true,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(\"check the data\");\n        console.log(res);\n        console.log(res.data);\n\n        if (res.data === undefined || res.data === null) {\n          console.log(\"the res data is null\");\n        } else {\n          console.log(\"i am try to check\");\n          console.log(res.data);\n\n          if (res.data._id !== undefined) {\n            this.setState({\n              auth: true,\n              _id: res.data._id,\n              Username: res.data.UserName,\n              Account: res.data.Account,\n              Login: res.data.Login\n            }, this.logState);\n          } else {\n            console.log(\"res.data._id is null\");\n          }\n        } // if (\"Account\" in res.data) {\n        //   this.setState(\n        //     {\n        //       auth: true,\n        //       _id: res.data._id,\n        //       Username: res.data.UserName,\n        //       Account: res.data.Account,\n        //       Login: res.data.Login,\n        //     },\n        //     this.logState\n        //   );\n        // } else {\n        // }\n\n      });\n      console.log(\"checked\"); //pseudocode\n\n      /* fetch GET credentials:include\n      url api/sessioncheck\n      checks for session key in express session/redis store\n      if yes, great ... do nothing\n      if not, window.location / \n      */\n      // let URL = \"http://localhost:4000/sessioncheck\";\n      // axios.get(URL)\n      // .then(res => {\n      //   console.log(res);\n      // })\n    };\n\n    let authURL = \"https://github.com/login/oauth/authorize?client_id=0be8114f0f94de54ce72&&redirect_uri=http://localhost:4000/auth/github/callback\"; // let authURL = \"https://github.com/login/oauth/authorize?client_id=fda597fe607c7161f2a0&&redirect_uri=https://tigerkingbackend.herokuapp.com/auth/github/callback\"\n    //\"https://github.com/login/oauth/authorize?client_id=0be8114f0f94de54ce72&&redirect_uri=http://localhost:4000/auth/github/callback\";\n    // let authURL = 'http://localhost:4000/auth/github';\n\n    this.state = {\n      auth: false,\n      primaryDisplay: \"messenger\",\n      authURL: authURL,\n      messengerHistory: \"\",\n      Username: \"\"\n    };\n  }\n\n  componentWillMount() {\n    /*\n    console.log(this.props)\n    var query = queryString.parse(window.location.search);\n    if (query.user) {\n      window.localStorage.setItem(\"user\", query.user);\n      console.log(window.localStorage);\n      this.props.history.push(\"/\");\n    }*/\n  }\n\n  componentDidMount() {\n    this.sessionCheck();\n    this.setMainViewState();\n  }\n\n  render() {\n    console.log(\" begin render\");\n    console.log(this.state.auth);\n\n    if (this.state.auth === true) {\n      return /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"main\", {\n        className: \"FlexViews\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/messages\",\n        render: routerProps => {\n          return /*#__PURE__*/React.createElement(Sidebar, Object.assign({\n            sessionCheck: this.sessionCheck\n          }, routerProps, this.state, {\n            messages: true,\n            setMainViewState: this.setMainViewState,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 23\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/matches\",\n        render: routerProps => {\n          return /*#__PURE__*/React.createElement(Sidebar, Object.assign({\n            sessionCheck: this.sessionCheck\n          }, routerProps, this.state, {\n            setMainViewState: this.setMainViewState,\n            matches: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 23\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/messages/:id\",\n        render: routerProps => {\n          //this.setMainViewState();\n          //this.setMessengerID();\n          return /*#__PURE__*/React.createElement(Sidebar, Object.assign({\n            sessionCheck: this.sessionCheck\n          }, routerProps, this.state, {\n            matches: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 23\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        render: routerProps => {\n          // this.setMainViewState(\"cards\");\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sidebar, Object.assign({\n            sessionCheck: this.sessionCheck\n          }, routerProps, this.state, {\n            matches: true,\n            setMainViewState: this.setMainViewState,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(DevCard, Object.assign({\n            sessionCheck: this.sessionCheck\n          }, routerProps, this.state, {\n            matches: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 23\n            }\n          })));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      })))));\n    } else {\n      console.log(\"this auth is false,\");\n      return /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"landing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: endevercircle,\n        className: \"ProductLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, \"EnDever App\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"GitHubIntegration\",\n        onClick: this.testStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, \"Sign in with \", /*#__PURE__*/React.createElement(\"img\", {\n        src: GitHubLogo,\n        className: \"GitHubLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 26\n        }\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/cygwin64/home/Daniel/sei/sandbox/blowmeup/EnDeverFrontEnd/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Switch","Redirect","axios","endevercircle","GitHubLogo","queryString","Navbar","Sidebar","DevCard","Messenger","App","constructor","testStateChange","window","location","state","authURL","setMainViewState","force","console","log","auth","setState","primaryDisplay","setMessengerID","id","get","withCredentials","then","res","messengerHistory","logState","sessionCheck","headers","data","undefined","_id","Username","UserName","Account","Login","componentWillMount","componentDidMount","render","routerProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"./logo.svg\";\nimport endevercircle from \"./img/endevercircle.png\";\nimport GitHubLogo from \"./img/GitHub_Logo_White.png\";\nimport \"./App.css\";\nimport \"./fonts/fonts.css\";\nimport queryString from \"query-string\";\n\n//For testing\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport DevCard from \"./components/DevCard/DevCard\";\nimport Messenger from \"./components/Messenger/Messenger\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    //temporary...\n    let authURL = \"https://github.com/login/oauth/authorize?client_id=0be8114f0f94de54ce72&&redirect_uri=http://localhost:4000/auth/github/callback\";\n    // let authURL = \"https://github.com/login/oauth/authorize?client_id=fda597fe607c7161f2a0&&redirect_uri=https://tigerkingbackend.herokuapp.com/auth/github/callback\"\n      //\"https://github.com/login/oauth/authorize?client_id=0be8114f0f94de54ce72&&redirect_uri=http://localhost:4000/auth/github/callback\";\n    // let authURL = 'http://localhost:4000/auth/github';\n    this.state = {\n      auth: false,\n      primaryDisplay: \"messenger\",\n      authURL: authURL,\n      messengerHistory: \"\",\n      Username: \"\",\n    };\n  }\n  componentWillMount() {\n    /*\n    console.log(this.props)\n    var query = queryString.parse(window.location.search);\n    if (query.user) {\n      window.localStorage.setItem(\"user\", query.user);\n      console.log(window.localStorage);\n      this.props.history.push(\"/\");\n   }*/\n  }\n  componentDidMount() {\n    this.sessionCheck();\n    this.setMainViewState();\n  }\n\n  testStateChange = () => {\n    // this.setState({ auth: true });\n    window.location = this.state.authURL;\n  };\n\n  setMainViewState = (force = \"\") => {\n    console.log(\"the state \");\n    console.log(this.state);\n    if (this.state.auth === true) {\n      if (force !== \"\") {\n        this.setState({\n          primaryDisplay: force,\n        });\n      } else {\n        if (this.state.primaryDisplay === \"cards\") {\n          this.setState({\n            primaryDisplay: \"messenger\",\n          });\n        } else {\n          this.setState({\n            primaryDisplay: \"cards\",\n          });\n        }\n      }\n    } else {\n      console.log(\"auth: false\");\n    }\n  };\n\n  setMessengerID = (id) => {\n    axios\n      .get(`https://tigerkingbackend.herokuapp.com/message/${id}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        this.setState({\n          messengerHistory: res,\n        });\n      });\n  };\n  logState = () => {\n    console.log(this.state);\n  };\n  sessionCheck = () => {\n    // console.log(document.cookie);\n    axios.get(\"http://localhost:4000/sessioncheck\", {\n      // .get(\"https://tigerkingbackend.herokuapp.com/sessioncheck\", {\n        withCredentials: true,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        console.log(\"check the data\");\n        console.log(res);\n        console.log(res.data);\n        if (res.data === undefined || res.data === null) {\n          console.log(\"the res data is null\");\n        } else {\n          console.log(\"i am try to check\");\n          console.log(res.data);\n          if (res.data._id !== undefined) {\n            this.setState(\n              {\n                auth: true,\n                _id: res.data._id,\n                Username: res.data.UserName,\n                Account: res.data.Account,\n                Login: res.data.Login,\n              },\n              this.logState\n            );\n          } else {\n            console.log(\"res.data._id is null\");\n          }\n        }\n        // if (\"Account\" in res.data) {\n        //   this.setState(\n        //     {\n        //       auth: true,\n        //       _id: res.data._id,\n        //       Username: res.data.UserName,\n        //       Account: res.data.Account,\n        //       Login: res.data.Login,\n        //     },\n        //     this.logState\n        //   );\n        // } else {\n        // }\n      });\n\n    console.log(\"checked\");\n    //pseudocode\n    /* fetch GET credentials:include\n    url api/sessioncheck\n    checks for session key in express session/redis store\n    if yes, great ... do nothing\n    if not, window.location / \n    */\n    // let URL = \"http://localhost:4000/sessioncheck\";\n\n    // axios.get(URL)\n    // .then(res => {\n    //   console.log(res);\n    // })\n  };\n\n  render() {\n    console.log(\" begin render\");\n    console.log(this.state.auth);\n    if (this.state.auth === true) {\n      return (\n        <Router>\n          <div className=\"App\">\n            <header>\n              <Navbar></Navbar>\n            </header>\n            <main className=\"FlexViews\">\n              <Switch>\n     \n                <Route\n                  path=\"/messages\"\n                  render={(routerProps) => {\n                    return (\n                      <Sidebar\n                        sessionCheck={this.sessionCheck}\n                        {...routerProps}\n                        {...this.state}\n                        messages\n                        setMainViewState={this.setMainViewState}\n                      ></Sidebar>\n                    );\n                  }}\n                />\n\n                <Route\n                  path=\"/matches\"\n                  render={(routerProps) => {\n                    return (\n                      <Sidebar\n                        sessionCheck={this.sessionCheck}\n                        {...routerProps}\n                        {...this.state}\n                        setMainViewState={this.setMainViewState}\n                        matches\n                      ></Sidebar>\n                    );\n                  }}\n                />\n\n                <Route\n                  path=\"/messages/:id\"\n                  render={(routerProps) => {\n                    //this.setMainViewState();\n                    //this.setMessengerID();\n                    return (\n                      <Sidebar\n                        sessionCheck={this.sessionCheck}\n                        {...routerProps}\n                        {...this.state}\n                        matches\n                      >\n                        {/* {this.setMainViewState()} */}\n                      </Sidebar>\n                    );\n                  }}\n                />\n                <Route\n                  path=\"/\"\n                  render={(routerProps) => {\n                    // this.setMainViewState(\"cards\");\n                    return (\n                        <>\n                        <Sidebar\n                            sessionCheck={this.sessionCheck}\n                            {...routerProps}\n                            {...this.state}\n                            matches\n                            setMainViewState={this.setMainViewState}\n                        >\n                        </Sidebar>\n                      <DevCard\n                        sessionCheck={this.sessionCheck}\n                        {...routerProps}\n                        {...this.state}\n                        matches\n                      ></DevCard>\n                      </>\n                    );\n                  }}\n                />\n              </Switch>\n            </main>\n          </div>\n        </Router>\n      );\n    } else {\n      console.log(\"this auth is false,\");\n      return (\n        <header className=\"App-header\">\n          <div className=\"landing\">\n            <img src={endevercircle} className=\"ProductLogo\" />\n            <div>EnDever App</div>\n          </div>\n          <div className=\"GitHubIntegration\" onClick={this.testStateChange}>\n            Sign in with <img src={GitHubLogo} className=\"GitHubLogo\" />\n          </div>\n        </header>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}